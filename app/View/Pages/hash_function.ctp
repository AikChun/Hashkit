<!-- <script src="/js/jquery.jeditable.js" type="text/javascript"></script>
<style type="text/css">  

    #content {
      width: 770px;
    }

    .editable input[type=submit] {
      color: #F00;
      font-weight: bold;
    }
    .editable input[type=button] {
      color: #0F0;
      font-weight: bold;
    }
</style>
<script type="text/javascript"> 
    $(function() {

      $(".edit_area").editable("Pages/hash_function", { 
          type   : 'textarea',
          select : true,
          submit : 'Ok',
          cancel : 'Cancel'
      });
    });
</script>
 -->


<article class="container">
        <div class="row">
            <div class="col-md-3" id="leftCol">
                <ul class="nav nav-stacked nav-pills" id="sidebar">
                  <li><a href="#sec0" class="active">Introduction</a></li>
                  <li class="divider"></li>
                  <li><a href="#sec1" class="">Types of Hash functions</a></li>
                  <li class="divider"></li>
                  <li><a href="#sec2" class="">Uses for Hash functions</a></li>
                  <li class="divider"></li>
                  <li><a href="#sec3" class="">Hash functions' properties</a></li>
                  <li class="divider"></li>
                  <li><a href="#sec4" class="">Attacks on Hash functions</a></li>
                  <li class="divider"></li>
                  <li><a href="#sec5" class="">Summary</a></li>
              </ul>
          </div>
          
          <div class="col-md-9">
              <h2 id="sec0" contenteditable="false">Introduction</h2>
              <h3 class="">What is a Hash function ?</h3>
              <p class="edit_area">A hash function takes in any length of data such as characters and maps them to a fixed length of arbitrary hash value.</p> 
              <hr class="">
                <h3 class="">What about Crytographic Hash function ?</h3>
                <p class="edit_area">Despite of having the same functionality as a hash function, it has additional properties such one-way which provides better security. It is usually associated with generating a message digest (sometimes called a checksum) which is normally shorter than the original data. For a message digest function to be crypotgraphically secure, it must be computationally infeasible to get back the original message by using the message digest and impossible to find two different messages with the same message digest. It is designed to be easily computable and has to achieve certain security properties, e.g: preimage resistance, second preimage resistance and collision resistance.<p>
                <br>
                Example of a MD5 function to perform on a message :
                <br>
                  <center><img src="/img/example.jpg"></center>
                <br>
                <h3>Is there any encryption in hash or digest ?</h3>
                  <p class="edit_area">The answer is No. There is always a confusion because all these words are in the category of "cryptography", but it is important to understand the difference. Encryption provide a 1:1 mapping between an arbitrary length and output and can be always reversible with a key which makes it a two-way operation. Unlike encryption, the hash should be only one-way which means that from a hash, it cannot not be used to get the original message. Below are the steps taken for each process that shows the difference between encryption and hash : 
                  </p>     
                <br>
                <div class="row">
                  <div class="col-md-6">
                      <div class="panel panel-default">
                          <div class="panel-heading">
                              <h3 class="" contenteditable="false">Encryption</h3>
                              <img src="/img/EncryptDecrypt.jpg">
                          </div>
                      </div>
                  </div>
                  <div class="col-md-6">
                      <div class="panel panel-default">
                          <div class="panel-heading">
                              <h3 class="" contenteditable="false">Hash Function</h3>
                              <img src="/img/sha1.jpg">
                          </div>
                      </div>
                  </div>
              </div>
              <br>
              <hr class="">
              <h2 id="sec1">Type of Hash functions</h2>
              <br>
                <CENTER><img src="/img/typeofhashfunctions.jpg"></CENTER>
              <br>
              <p> The classification of the hash functions depends on 
    
              </p>
              <hr class="">
              <h2 id="sec2">Uses for Hash functions</h2>
              <h3>Verifying file integrity</h3>
              <p class="edit_area">This is often used to check the intergity of the data by comparing the both checksums of two identical files generated by same hash function to be similar to one another.</p>
              <br>
              <h3>Hashing passwords</h3>
              <p class="edit_area">In a computer system, it is not a good idea to store passwords in cleartext (readable to user) due to the fact that if the system has been compromised, the bad guy can somehow obtain the stored passwords and use to their advantage. Hence, a more secure way is to store the hash of the password, rather than the password itself since the hashes are not reversible. This reduces the consequence of damage done by the bad guy.</p> 
              Example : 
              <br>
              <br>


              </br>
              <hr class="">
                <h2 id="sec3" class="">Hash functions' properties</h2>

              <p class="">A cyptographic hash functions must be able to defend against all known type of cryptanalytic attack. It should be able to apply to any input size and output a fixed size. It must have the following properties:
                  <li><b>Pre-image resistance</b>
                  <br>
                  For any given input Y, it should be difficult to find another input X such that hash(Y) = hash(X) and Y not equals to X. Function that does not have this property are prone to preimage attacks.
                  <br><br>
                  <li><b>Second pre-image resistance</b>
              </p>
          </div> <!--col-md-9 -->
      </div> <!--row-->
  </article>

<script type="text/javascript">
    $('#sidebar').affix({
        offset: {
          top: 235
        }
    });
    var $body   = $(document.body);
    var navHeight = $('.navbar').outerHeight(true) + 10;

    $body.scrollspy({
      target: '#leftCol',
      offset: navHeight
    });

    /* smooth scrolling sections */
    $('a[href*=#]:not([href=#])').click(function() {
        if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
          var target = $(this.hash);
          target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
          if (target.length) {
            $('html,body').animate({
              scrollTop: target.offset().top - 50
            }, 1000);
            return false;
          }
        }
    });
</script>